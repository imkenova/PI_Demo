[{"C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\index.js":"1","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\App.js":"2","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\reportWebVitals.js":"3","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\Header.js":"4","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\SubjectMenu.js":"5","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\SubjectContent.js":"6","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\ContextMenu.js":"7","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\AddSubjectModal.js":"8","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\Post.js":"9"},{"size":494,"mtime":1634247863960,"results":"10","hashOfConfig":"11"},{"size":1346,"mtime":1634247863955,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1634247863961,"results":"13","hashOfConfig":"11"},{"size":940,"mtime":1634247863958,"results":"14","hashOfConfig":"11"},{"size":2603,"mtime":1634247863960,"results":"15","hashOfConfig":"11"},{"size":1791,"mtime":1634247863959,"results":"16","hashOfConfig":"11"},{"size":1486,"mtime":1634249096903,"results":"17","hashOfConfig":"11"},{"size":2164,"mtime":1634247863955,"results":"18","hashOfConfig":"11"},{"size":3580,"mtime":1634247863958,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ux8vb3",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\index.js",[],["45","46"],"C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\App.js",["47","48","49","50"],"import Header from \"./Header\";\r\nimport SubjectMenu from \"./SubjectMenu\";\r\nimport {useState} from \"react\";\r\nimport SubjectContent from \"./SubjectContent\";\r\n\r\nfunction App() {\r\n\r\n    let currentDate = new Date()\r\n    let lastAppUpdate = localStorage['lastAppUpdate'] == null ? JSON.parse('[]') : JSON.parse(localStorage['lastAppUpdate'])\r\n    if (lastAppUpdate.length == 0 || lastAppUpdate[2] != currentDate.getFullYear() || lastAppUpdate[1] != currentDate.getMonth() || lastAppUpdate[0] != currentDate.getDate()){\r\n        let newDate = []\r\n        newDate.push(currentDate.getDate())\r\n        newDate.push(currentDate.getMonth())\r\n        newDate.push(currentDate.getFullYear())\r\n        localStorage['lastAppUpdate'] = JSON.stringify(newDate)\r\n        window.location.reload(true)\r\n    }\r\n\r\n    if (localStorage['subjects'] == null) {\r\n        localStorage['subjects'] = JSON.stringify([])\r\n        localStorage['posts'] = JSON.stringify([])\r\n    }\r\n\r\n    const [selectedSubject, editSelectedSubject] = useState(-1)\r\n\r\n    return (\r\n        <div className=\"container\" onContextMenu={(e)=>e.preventDefault()}>\r\n            <Header/>\r\n            <SubjectMenu selectedSubject={selectedSubject} editSelectedSubject={editSelectedSubject} />\r\n            <SubjectContent subject={selectedSubject}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\reportWebVitals.js",[],"C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\Header.js",["51","52","53"],"import \"./Header.css\"\r\nimport Slide from 'react-reveal/Slide'\r\nimport {memo} from \"react\";\r\n\r\nfunction Header() {\r\n\r\n    let randomInfo = ['version', 'subjects', 'posts']\r\n    let userNotification\r\n\r\n\r\n\r\n    return (\r\n        <Slide top>\r\n            <div className=\"row valign-wrapper\">\r\n                <div className=\"col s12 m12 l12 hide-on-med-and-up center-align\">\r\n                    <img src=\"logo.png\"/> <span className=\"logo-text blue-text\">Заметки</span>\r\n                </div>\r\n                <div className=\"col s12 m6 l6 left-align grey-text hide-on-small-only\">\r\n                    <img src=\"logo.png\"/> <span className=\"logo-text blue-text\">Заметки</span>\r\n                </div>\r\n                <div className=\"col s12 m6 l6 right-align hide-on-small-only grey-text\">\r\n                    {userNotification}\r\n                </div>\r\n            </div>\r\n        </Slide>)\r\n}\r\n\r\nexport default memo(Header)","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\SubjectMenu.js",["54","55"],"import \"./SubjectMenu.css\"\r\nimport {useState} from \"react\";\r\nimport Slide from \"react-reveal/Slide\";\r\nimport AddSubjectModal from \"./AddSubjectModal\";\r\nimport ContextMenu from \"./ContextMenu\";\r\n\r\nfunction SubjectMenu(props) {\r\n\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [contextMenuOpened, editContextMenuOpened] = useState(false)\r\n    const [contextMenuSelectedSubject, editContextMenuSelectedSubject] = useState(-1)\r\n    const [contextMenuPosition, editContextMenuPosition] = useState([0, 0])\r\n\r\n    let subjects = JSON.parse(localStorage['subjects'])\r\n    let renderedSubjects\r\n\r\n    function switchModal() {\r\n        setModalVisible(true)\r\n    }\r\n\r\n    function selectSubject(s) {\r\n        props.editSelectedSubject(s)\r\n    }\r\n\r\n    renderedSubjects = subjects.map((s, i) => {\r\n        if (s != null)\r\n            return (\r\n                <Slide right key={s.toString()}>\r\n                    <div className=\"card grey lighten-5 blue-text hoverable valign-wrapper\" onContextMenu={(e) => {\r\n                        e.preventDefault();\r\n                        editContextMenuSelectedSubject(i);\r\n                        editContextMenuPosition([e.clientX, e.clientY])\r\n                        editContextMenuOpened(true)\r\n                    }} onClick={() => {\r\n                        selectSubject(i)\r\n                    }}>\r\n                        <div\r\n                            className={`card-content center-align truncate ${props.selectedSubject == i ? 'active' : ''}`}>\r\n                            {s}\r\n                        </div>\r\n                    </div>\r\n                </Slide>\r\n            )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <AddSubjectModal visible={modalVisible} changeVisibility={setModalVisible}/>\r\n            <ContextMenu opened={contextMenuOpened} editOpened={editContextMenuOpened}\r\n                         subject={contextMenuSelectedSubject} editSelectedSubject={props.editSelectedSubject}\r\n                         cursorPos={contextMenuPosition}\r\n            />\r\n            <div className=\"row left-align subjects-band\">\r\n                <Slide right>\r\n                    <div className=\"card blue white-text hoverable valign-wrapper\" onClick={switchModal}>\r\n                        <div className=\"card-content center-align\">\r\n                            <i className=\"material-icons medium white-text\">add</i>\r\n                        </div>\r\n                    </div>\r\n                </Slide>\r\n                {renderedSubjects}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubjectMenu","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\SubjectContent.js",["56","57","58","59","60"],"import \"./SubjectContent.css\"\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Post from \"./Post\";\r\nimport {useState} from \"react\";\r\n\r\nfunction SubjectContent(props) {\r\n\r\n    let postsToRender = ''\r\n\r\n    const [ticker, updateTick] = useState(0)\r\n\r\n    if (props.subject != -1) {\r\n        postsToRender = JSON.parse(localStorage['posts']).map((p, i) => {\r\n            if (p[0] == props.subject) {\r\n                return (\r\n                    <Post key={i.toString()} id={i} post={p} updater={updateTick} tick={ticker}/>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    function addPost() {\r\n        localStorage['posts'] = JSON.stringify([[props.subject, new Date(), false, 'Новая запись']].concat(JSON.parse(localStorage['posts'])))\r\n        updateTick(ticker + 1)\r\n    }\r\n\r\n    if (props.subject == -1) {\r\n        return (\r\n            <Fade>\r\n                <div className={`row center-align grey-text notification`}>\r\n                    <div className={`col s12 m12 l12`}>\r\n                        <i className={`material-icons medium`}>edit</i>\r\n                        <h5>Выберите категорию</h5>\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={`row left-align`}>\r\n                <div className={`col s12 m12 l12`}>\r\n                    <ul className={`collection`}>\r\n                        <a onClick={addPost} className={`collection-item blue-text add-post-button`}><i\r\n                            className={`material-icons left blue-text`}>add</i> Новая запись</a>\r\n                        {postsToRender}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubjectContent","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\ContextMenu.js",["61","62"],"C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\AddSubjectModal.js",["63","64","65"],"import \"./AddSubjectModal.css\"\r\nimport Fade from \"react-reveal/Fade\"\r\nimport {useState} from \"react\";\r\n\r\nfunction AddSubjectModal(props) {\r\n\r\n    const [name, editName] = useState('')\r\n    const [errorMsg, editErrorMsg] = useState('')\r\n\r\n    function addSubject(e) {\r\n        e.stopPropagation()\r\n        if (name.replace(/ /g, '').length != 0 && JSON.parse(localStorage['subjects']).indexOf(name) == -1) {\r\n            localStorage['subjects'] = JSON.stringify(JSON.parse(localStorage['subjects']).concat(name))\r\n            props.changeVisibility(false)\r\n            editErrorMsg('')\r\n        } else {\r\n            editErrorMsg('Поле пустое, либо предмет с такой же категорией уже существует')\r\n        }\r\n    }\r\n\r\n    function preventHiding(e) {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    function hideModal(e) {\r\n        props.changeVisibility(false)\r\n        editErrorMsg('')\r\n    }\r\n\r\n    function keyPress(e){\r\n        if (e.key == \"Enter\"){\r\n            addSubject(e)\r\n        }\r\n    }\r\n\r\n    if (props.visible)\r\n        return (\r\n            <div className=\"modalWrapper\" onClick={hideModal}>\r\n                <Fade>\r\n                    <div className=\"modal\" onClick={preventHiding}>\r\n                        <div className=\"modal-content\">\r\n                            <h4 className=\"blue-text\">Добавить категорию</h4>\r\n                            <input autoFocus={true} type=\"text\" maxLength=\"64\" placeholder=\"Введите название категории\" onChange={(e) => {\r\n                                editName(e.target.value)\r\n                            }} onKeyPress={keyPress}/>\r\n                            {errorMsg.length > 0 && <span className=\"red-text\">{errorMsg}</span>}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn blue white-text\" onClick={addSubject}>Добавить</button>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        )\r\n    else\r\n        return ('')\r\n}\r\n\r\nexport default AddSubjectModal","C:\\Users\\Сангаджи\\Documents\\GitHub\\PI_Demo\\src\\Post.js",["66","67","68","69","70","71","72"],"import \"./Post.css\"\r\nimport {useState} from \"react\";\r\n\r\nfunction Post(props){\r\n\r\n    const [postText, editPostText] = useState('')\r\n    const [editMode, switchEditMode] = useState(false)\r\n\r\n    let postDate = new Date(props.post[1])\r\n\r\n    let postDay = postDate.getDate().toString().length < 2 ? '0' + postDate.getDate().toString() : postDate.getDate().toString()\r\n    let postMonth = (postDate.getMonth() + 1).toString().length < 2 ? '0' + (postDate.getMonth() + 1).toString() : (postDate.getMonth() + 1).toString()\r\n    let postHour = postDate.getHours().toString().length < 2 ? '0' + postDate.getHours().toString() : postDate.getHours().toString()\r\n    let postMinute = postDate.getMinutes().toString().length < 2 ? '0' + postDate.getMinutes().toString() : postDate.getMinutes().toString()\r\n\r\n    let dateRender = postDay + '.' + postMonth + '.' + postDate.getFullYear() + ' ' + postHour + ':' + postMinute\r\n\r\n    let postStatus = ''\r\n\r\n    if (props.post[2].toString() == \"true\"){\r\n        postStatus = <div className={`green-text valign-wrapper`}><i className={`material-icons done`}>done</i>Завершено</div>\r\n    }\r\n\r\n    function removePost(){\r\n        let extraction = JSON.parse(localStorage['posts'])\r\n        extraction = extraction.filter((p, i) => i != props.id)\r\n        localStorage['posts'] = JSON.stringify(extraction)\r\n        props.updater(props.tick + 1)\r\n    }\r\n\r\n    function editPost(){\r\n        if (editMode){\r\n            let extraction = JSON.parse(localStorage['posts'])\r\n            extraction[props.id][3] = postText\r\n            localStorage['posts'] = JSON.stringify(extraction)\r\n            props.updater(props.tick + 1)\r\n        }\r\n        switchEditMode(!editMode)\r\n    }\r\n\r\n    function markAsDone(){\r\n        let extraction = JSON.parse(localStorage['posts'])\r\n        extraction[props.id][2] = extraction[props.id][2].toString() == 'true' ? 'false' : 'true'\r\n        localStorage['posts'] = JSON.stringify(extraction)\r\n        props.updater(props.tick + 1)\r\n    }\r\n\r\n    function enterTextareaHandling(e){\r\n        if (e.key == 'Enter'){\r\n            e.preventDefault()\r\n            editPost()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li className={`collection-item black-text ${props.post[2].toString() == \"true\" ? 'grey lighten-2' : ''}`}>\r\n            <div className={`post-container`}>\r\n                <div className={`post-text ${props.post[2].toString() == \"false\" ? 'black-text' : 'grey-text'} left-align`}>\r\n                    {editMode && <textarea autoFocus onFocus={(e) => {editPostText(e.target.value)}} onChange={(e)=>{editPostText(e.target.value)}} onKeyDown={enterTextareaHandling} defaultValue={props.post[3]}></textarea>}\r\n                    {!editMode && postStatus}\r\n                    {!editMode && props.post[3]}\r\n                </div>\r\n                <div className={`post-actions grey-text`}>\r\n                    <div className={`post-date`}>\r\n                        {dateRender}\r\n                    </div>\r\n                    <div className={`post-btns right-align`}>\r\n                        <span onClick={markAsDone} className={`blue-text`}>{props.post[2].toString() == 'true' ? 'Снять метку' : 'Отметить'}</span>\r\n                        <span onClick={editPost} className={`blue-text`}>{editMode ? 'Сохранить' : 'Редактировать'}</span>\r\n                        <span onClick={removePost} className={`red-text`}>Удалить</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Post",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":10,"column":30,"nodeType":"79","messageId":"80","endLine":10,"endColumn":32},{"ruleId":"77","severity":1,"message":"81","line":10,"column":55,"nodeType":"79","messageId":"80","endLine":10,"endColumn":57},{"ruleId":"77","severity":1,"message":"81","line":10,"column":104,"nodeType":"79","messageId":"80","endLine":10,"endColumn":106},{"ruleId":"77","severity":1,"message":"81","line":10,"column":150,"nodeType":"79","messageId":"80","endLine":10,"endColumn":152},{"ruleId":"82","severity":1,"message":"83","line":7,"column":9,"nodeType":"84","messageId":"85","endLine":7,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":16,"column":21,"nodeType":"88","endLine":16,"endColumn":42},{"ruleId":"86","severity":1,"message":"87","line":19,"column":21,"nodeType":"88","endLine":19,"endColumn":42},{"ruleId":"89","severity":1,"message":"90","line":25,"column":44,"nodeType":"91","messageId":"92","endLine":25,"endColumn":46},{"ruleId":"77","severity":1,"message":"78","line":38,"column":100,"nodeType":"79","messageId":"80","endLine":38,"endColumn":102},{"ruleId":"77","severity":1,"message":"81","line":12,"column":23,"nodeType":"79","messageId":"80","endLine":12,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":13,"column":70,"nodeType":"91","messageId":"92","endLine":13,"endColumn":72},{"ruleId":"77","severity":1,"message":"78","line":14,"column":22,"nodeType":"79","messageId":"80","endLine":14,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":27,"column":23,"nodeType":"79","messageId":"80","endLine":27,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":43,"column":25,"nodeType":"88","endLine":43,"endColumn":102},{"ruleId":"77","severity":1,"message":"81","line":20,"column":62,"nodeType":"79","messageId":"80","endLine":20,"endColumn":64},{"ruleId":"93","severity":1,"message":"94","line":36,"column":29,"nodeType":"88","endLine":36,"endColumn":92},{"ruleId":"77","severity":1,"message":"81","line":12,"column":43,"nodeType":"79","messageId":"80","endLine":12,"endColumn":45},{"ruleId":"77","severity":1,"message":"78","line":12,"column":102,"nodeType":"79","messageId":"80","endLine":12,"endColumn":104},{"ruleId":"77","severity":1,"message":"78","line":31,"column":19,"nodeType":"79","messageId":"80","endLine":31,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":20,"column":34,"nodeType":"79","messageId":"80","endLine":20,"endColumn":36},{"ruleId":"77","severity":1,"message":"81","line":26,"column":52,"nodeType":"79","messageId":"80","endLine":26,"endColumn":54},{"ruleId":"77","severity":1,"message":"78","line":43,"column":70,"nodeType":"79","messageId":"80","endLine":43,"endColumn":72},{"ruleId":"77","severity":1,"message":"78","line":49,"column":19,"nodeType":"79","messageId":"80","endLine":49,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":56,"column":79,"nodeType":"79","messageId":"80","endLine":56,"endColumn":81},{"ruleId":"77","severity":1,"message":"78","line":58,"column":71,"nodeType":"79","messageId":"80","endLine":58,"endColumn":73},{"ruleId":"77","severity":1,"message":"78","line":68,"column":102,"nodeType":"79","messageId":"80","endLine":68,"endColumn":104},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'randomInfo' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]