{"ast":null,"code":"var _jsxFileName = \"/Users/lena_imkenova/Desktop/ToDo/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport \"./Post.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  const [postText, editPostText] = useState('');\n  const [editMode, switchEditMode] = useState(false);\n  let postDate = new Date(props.post[1]);\n  let postDay = postDate.getDate().toString().length < 2 ? '0' + postDate.getDate().toString() : postDate.getDate().toString();\n  let postMonth = (postDate.getMonth() + 1).toString().length < 2 ? '0' + (postDate.getMonth() + 1).toString() : (postDate.getMonth() + 1).toString();\n  let postHour = postDate.getHours().toString().length < 2 ? '0' + postDate.getHours().toString() : postDate.getHours().toString();\n  let postMinute = postDate.getMinutes().toString().length < 2 ? '0' + postDate.getMinutes().toString() : postDate.getMinutes().toString();\n  let dateRender = postDay + '.' + postMonth + '.' + postDate.getFullYear() + ' ' + postHour + ':' + postMinute;\n  let postStatus = '';\n\n  if (props.post[2].toString() == \"true\") {\n    postStatus = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `green-text valign-wrapper`,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: `material-icons done`,\n        children: \"done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 67\n      }, this), \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043E\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this);\n  }\n\n  function removePost() {\n    let extraction = JSON.parse(localStorage['posts']);\n    extraction = extraction.filter((p, i) => i != props.id);\n    localStorage['posts'] = JSON.stringify(extraction);\n    props.updater(props.tick + 1);\n  }\n\n  function editPost() {\n    if (editMode) {\n      let extraction = JSON.parse(localStorage['posts']);\n      extraction[props.id][3] = postText;\n      localStorage['posts'] = JSON.stringify(extraction);\n      props.updater(props.tick + 1);\n    }\n\n    switchEditMode(!editMode);\n  }\n\n  function markAsDone() {\n    let extraction = JSON.parse(localStorage['posts']);\n    extraction[props.id][2] = extraction[props.id][2].toString() == 'true' ? 'false' : 'true';\n    localStorage['posts'] = JSON.stringify(extraction);\n    props.updater(props.tick + 1);\n  }\n\n  function enterTextareaHandling(e) {\n    if (e.key == 'Enter') {\n      e.preventDefault();\n      editPost();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `collection-item black-text ${props.post[2].toString() == \"true\" ? 'grey lighten-2' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `post-container`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post-text ${props.post[2].toString() == \"false\" ? 'black-text' : 'grey-text'} left-align`,\n        children: [editMode && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          autoFocus: true,\n          onFocus: e => {\n            editPostText(e.target.value);\n          },\n          onChange: e => {\n            editPostText(e.target.value);\n          },\n          onKeyDown: enterTextareaHandling,\n          defaultValue: props.post[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this), !editMode && postStatus, !editMode && props.post[3]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post-actions grey-text`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `post-date`,\n          children: dateRender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `post-btns right-align`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: markAsDone,\n            className: `blue-text`,\n            children: props.post[2].toString() == 'true' ? 'Снять метку' : 'Отметить'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: editPost,\n            className: `blue-text`,\n            children: editMode ? 'Сохранить' : 'Редактировать'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: removePost,\n            className: `red-text`,\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"f/K4s7K8z60HLMzaiCr3Erj2ZY4=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/lena_imkenova/Desktop/ToDo/src/Post.js"],"names":["useState","Post","props","postText","editPostText","editMode","switchEditMode","postDate","Date","post","postDay","getDate","toString","length","postMonth","getMonth","postHour","getHours","postMinute","getMinutes","dateRender","getFullYear","postStatus","removePost","extraction","JSON","parse","localStorage","filter","p","i","id","stringify","updater","tick","editPost","markAsDone","enterTextareaHandling","e","key","preventDefault","target","value"],"mappings":"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","sourcesContent":["import \"./Post.css\"\nimport {useState} from \"react\";\n\nfunction Post(props){\n\n    const [postText, editPostText] = useState('')\n    const [editMode, switchEditMode] = useState(false)\n\n    let postDate = new Date(props.post[1])\n\n    let postDay = postDate.getDate().toString().length < 2 ? '0' + postDate.getDate().toString() : postDate.getDate().toString()\n    let postMonth = (postDate.getMonth() + 1).toString().length < 2 ? '0' + (postDate.getMonth() + 1).toString() : (postDate.getMonth() + 1).toString()\n    let postHour = postDate.getHours().toString().length < 2 ? '0' + postDate.getHours().toString() : postDate.getHours().toString()\n    let postMinute = postDate.getMinutes().toString().length < 2 ? '0' + postDate.getMinutes().toString() : postDate.getMinutes().toString()\n\n    let dateRender = postDay + '.' + postMonth + '.' + postDate.getFullYear() + ' ' + postHour + ':' + postMinute\n\n    let postStatus = ''\n\n    if (props.post[2].toString() == \"true\"){\n        postStatus = <div className={`green-text valign-wrapper`}><i className={`material-icons done`}>done</i>Завершено</div>\n    }\n\n    function removePost(){\n        let extraction = JSON.parse(localStorage['posts'])\n        extraction = extraction.filter((p, i) => i != props.id)\n        localStorage['posts'] = JSON.stringify(extraction)\n        props.updater(props.tick + 1)\n    }\n\n    function editPost(){\n        if (editMode){\n            let extraction = JSON.parse(localStorage['posts'])\n            extraction[props.id][3] = postText\n            localStorage['posts'] = JSON.stringify(extraction)\n            props.updater(props.tick + 1)\n        }\n        switchEditMode(!editMode)\n    }\n\n    function markAsDone(){\n        let extraction = JSON.parse(localStorage['posts'])\n        extraction[props.id][2] = extraction[props.id][2].toString() == 'true' ? 'false' : 'true'\n        localStorage['posts'] = JSON.stringify(extraction)\n        props.updater(props.tick + 1)\n    }\n\n    function enterTextareaHandling(e){\n        if (e.key == 'Enter'){\n            e.preventDefault()\n            editPost()\n        }\n    }\n\n    return (\n        <li className={`collection-item black-text ${props.post[2].toString() == \"true\" ? 'grey lighten-2' : ''}`}>\n            <div className={`post-container`}>\n                <div className={`post-text ${props.post[2].toString() == \"false\" ? 'black-text' : 'grey-text'} left-align`}>\n                    {editMode && <textarea autoFocus onFocus={(e) => {editPostText(e.target.value)}} onChange={(e)=>{editPostText(e.target.value)}} onKeyDown={enterTextareaHandling} defaultValue={props.post[3]}></textarea>}\n                    {!editMode && postStatus}\n                    {!editMode && props.post[3]}\n                </div>\n                <div className={`post-actions grey-text`}>\n                    <div className={`post-date`}>\n                        {dateRender}\n                    </div>\n                    <div className={`post-btns right-align`}>\n                        <span onClick={markAsDone} className={`blue-text`}>{props.post[2].toString() == 'true' ? 'Снять метку' : 'Отметить'}</span>\n                        <span onClick={editPost} className={`blue-text`}>{editMode ? 'Сохранить' : 'Редактировать'}</span>\n                        <span onClick={removePost} className={`red-text`}>Удалить</span>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}